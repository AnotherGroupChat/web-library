//
// Metadata list
// --------------------------------------------------

.metadata-list {
	margin: $metadata-list-margin;

	.key,
	.value {
		min-height: $metadata-list-line-height;
	}

	.key {
		color: $key-color;
		margin-top: $space-xs;

		a {
			color: inherit;
			text-decoration: none;

			&[href]:hover {
				color: $link-color;
			}
		}
	}

	@include bp-only(sm) {
		.key,
		.value {
			min-height: $metadata-list-line-height-sm;
		}
	}

	@include bp-up(sm) {
		.key {
			padding-right: $metadata-list-gutter-mobile / 2;
		}

		.value {
			padding-left:
				$metadata-list-gutter-mobile / 2
				- $editable-border-width
				- $editable-padding-horizontal;

		}
	}

	@include mouse-and-bp-up(md) {
		.key {
			padding-right: $metadata-list-gutter / 2;
		}

		.value {
			display: flex;
			align-items: center;
			padding-left: $metadata-list-gutter / 2;
		}

		.extra {
			.value {
				align-items: flex-start;
			}
		}
	}

	@include bp-up($metadata-list-bp) {
		@include horizontal;
	}

	// Edit mode
	&.editing {
		@include touch-or-bp-down(sm) {
			@include horizontal;

			.metadata {
				position: relative;

				&::before {
					content: "";
					position: absolute;
					left: $space-md;
					right: $space-md;
					bottom: calc(100% - 1px);
					height: 1px;
					background: $separator-color;
					z-index: 1;

				}

				// Editable focus state
				&.editing {
					background: $editable-bg;

					&::before,
					& + .metadata::before {
						left: 0;
						right: 0;
						height: $editable-border-width;
						background: rgba($focus-color, 0.6);
					}

					& + .metadata {
						&::before {
							bottom: auto;
							top: 0;
						}
					}
				}
			}

			.key,
			.value {
				min-height: $line-height-large-touch + 1px;
			}

			.value {
				padding-left: 12px;
			}

			//.editable {
			//	padding-left: 0;
			//}

			//.editable-control {
			//	background: transparent;
			//	padding: 0;
			//	border: 0;
			//
			//	.select & {
			//		background: $editable-bg;
			//	}
			//}
		}
	}

	.editable {
		line-height: normal;

		.editable-content {
			padding: 2px;
			border: 1px solid transparent;
			width: calc(100% + 6px);
			margin: -3px;
			border-radius: 3px;
			cursor: pointer;
		}

		&:hover {
			.editable-content {
				background-color: $editable-hover-bg;
				border-color: $editable-hover-bg;
			}
		}

		&.textarea {
			.editable-content {
				margin-top: 1px; // Align vertically with label
				padding-top: 0;
				padding-bottom: 0;
			}

			.editable-control {
				margin-top: -1px; // Align vertically with label
			}
		}
	}

	.empty {
		.editable-content {
			&:before {
				content: "\00a0";
			}
		}

		@include touch-or-bp-down(md) {
			display: none;
		}
	}

	label {
		@include text-truncate;
		line-height: normal; // Flex alignment is more stable

		&[for="url"] {
			overflow: inherit;
			text-overflow: inherit;
			white-space: inherit;
		}
	}

	.creators-entry {
		.value {
			> *:not(:first-child) {
				margin-left: 2px;
			}

			> *:not(:last-child) {
				margin-right: 2px;
			}

			.editable {
				min-width: $space-lg;

				&:first-child {
					flex: 0 1 auto;

					&.editing {
						flex: 1 1 auto;
					}
				}

				&:last-of-type {
					margin-right: auto;
				}
			}

			.btn {
				display: none;
			}
		}

		&.creators-twoslot {
			.editable:first-child {
				display: flex;

				.input-group {
					flex: 1 1 auto;
				}

				&::after {
					content: ",";
					flex: 0 0 auto;
				}
			}
		}
	}

	.extra {
		label {
			line-height: $line-height-base;
		}
	}
}
