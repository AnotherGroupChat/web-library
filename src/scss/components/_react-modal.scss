//
// React-modal
//

.ReactModal__Body--open {
	overflow: hidden;
}

.modal-backdrop {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background-color: $modal-backdrop-bg;
	overflow-y: auto;
	-webkit-overflow-scrolling: touch; // Momentum scrolling for iOS
	z-index: $z-index-modal;

	@include bp-down(xs) {
		overflow-y: hidden;
	}
}

.modal {
	width: auto;

	@include bp-down(xs) {
		height: calc(100% - #{$navbar-height-xs});
	}

	@include bp-up(sm) {
		max-width: $modal-md;
		margin: $space-xl auto;
	}

	&.loading {
		display: flex;
		justify-content: center;
		align-items: center;
		height: calc(100% - 2 * #{$space-xs});

		@include bp-up(md) {
			height: calc(100% - 2 * #{$space-xl});
		}

		.icon-spin {
			color: $modal-icon-spin-color;
		}
	}

	&.collection-select-modal {
		.modal-body {
			height: 300px;
			padding: 0;
		}
	}
}

.modal-content {
	width: 100%;
	background: $modal-content-bg;

	@include bp-down(xs) {
		height: 100%;
	}

	@include touch-and-bp-up(sm) {
		border-radius: $modal-border-radius;
		overflow: hidden;
	}
}

.modal-header {
	display: flex;
	align-items: center;
	padding: 0 $modal-header-padding $border-width;
	background-color: $modal-header-bg;
	height: $modal-header-height;
	@include hairline(bottom, $modal-header-border);

	&-left,
	&-right {
		flex: 1 0 0;
	}

	&-center {
		flex: 2 0 0;
		max-width: 50%;
		text-align: center;
	}

	&-right {
		text-align: right;
	}
}

.modal-body,
.modal-footer {
	padding: $modal-inner-padding;
}

.modal-body {
	@include bp-down(xs) {
		height: calc(100% - #{$modal-header-height});
		overflow-y: auto;
		-webkit-overflow-scrolling: touch; // Momentum scrolling for iOS
	}
}

.modal-footer {
	display: flex;
	justify-content: flex-end;
	border-top: $modal-footer-border-width solid $modal-footer-border-color;

	.btn {
		&:not(:first-child) {
			margin-left: $space-sm / 2;
		}

		&:not(:last-child) {
			margin-right: $space-sm / 2;
		}
	}
}

.modal-centered {
	display: flex;
	align-items: center;
	min-height: calc(100% - #{2 * $space-xs});

	@include bp-up(sm) {
		min-height: calc(100% - #{2 * $space-xl});
	}
}

.modal-scrollbar-measure {
	position: absolute;
	top: -9999px;
	width: 50px;
	height: 50px;
	overflow: scroll;
}

.modal-slide {
	&.ReactModal {
		&__Overlay {
			@include touch-or-bp-down(sm) {
				opacity: 0;
			}

			@include bp-down(xs) {
				html:not(.specifity) & {
					opacity: 1; // Reset
					transform: translate3d(0, 100%, 0);
				}
			}

			.modal-content {
				@include touch-or-bp-down(sm) {
					transform: translate3d(0, 100%, 0);
				}

				@include bp-down(xs) {
					html:not(.specifity) & {
						transform: none; // Reset
					}
				}
			}

			&--after-open {
				@include touch-or-bp-down(sm) {
					opacity: 1;
					transition: opacity $nav-transition;
				}

				@include bp-down(xs) {
					html:not(.specifity) & {
						transform: translate3d(0, $navbar-height-xs, 0);
						transition: transform $nav-transition;
					}
				}

				.modal-content {
					@include touch-or-bp-down(sm) {
						transform: translate3d(0, 0, 0);
						transition: transform $nav-transition;
					}
				}
			}

			&--before-close {
				@include touch-or-bp-down(sm) {
					opacity: 0;
					transition: opacity $modal-exit-transition-xs;
				}

				@include bp-down(xs) {
					html:not(.specifity) & {
						opacity: 1; // Reset
						transform: translate3d(0, 100%, 0);
						transition: transform $modal-exit-transition-xs;
					}
				}

				.modal-content {
					@include touch-or-bp-down(sm) {
						transform: translate3d(0, 100%, 0);
						transition: transform $modal-exit-transition-xs;
					}

					@include bp-down(xs) {
						html:not(.specifity) & {
							transform: none; // Reset
						}
					}
				}
			}
		}
	}
}
